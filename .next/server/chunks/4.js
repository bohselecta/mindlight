"use strict";exports.id=4,exports.ids=[4],exports.modules={30886:(a,b,c)=>{c.r(b),c.d(b,{LocalAutonomyStore:()=>j,autonomyStore:()=>k});var d=c(80120),e=c(77084);let f=[{id:"streak_7",name:"Week Warrior",description:"Maintained a 7-day reflection streak",icon:"\uD83D\uDD25",category:"streak",rarity:"common",condition:a=>a.streak.milestones.seven},{id:"streak_21",name:"Habit Former",description:"Built a 21-day reflection habit",icon:"⚡",category:"streak",rarity:"uncommon",condition:a=>a.streak.milestones.twentyOne},{id:"streak_60",name:"Mindfulness Master",description:"Sustained 60 days of daily reflection",icon:"\uD83E\uDDD8",category:"streak",rarity:"rare",condition:a=>a.streak.milestones.sixty},{id:"streak_100",name:"Epistemic Sage",description:"Achieved 100 days of metacognitive practice",icon:"\uD83D\uDC51",category:"streak",rarity:"epic",condition:a=>a.streak.milestones.hundred},{id:"baseline_complete",name:"Self-Aware",description:"Completed the Baseline Mirror assessment",icon:"\uD83E\uDE9E",category:"module",rarity:"common",condition:a=>a.milestones.some(a=>"module_complete"===a.milestoneType)},{id:"disconfirm_master",name:"Falsification Expert",description:"Mastered the Disconfirm Game",icon:"\uD83C\uDFAF",category:"module",rarity:"uncommon",condition:a=>a.disconfirmGames.length>=3},{id:"schema_reclaimer",name:"Emotional Regulator",description:"Completed Schema Reclaim sessions",icon:"\uD83D\uDEE1️",category:"module",rarity:"uncommon",condition:a=>a.schemaReclaims.length>=2},{id:"source_auditor",name:"Information Detective",description:"Mapped your influence sources",icon:"\uD83D\uDD0D",category:"module",rarity:"uncommon",condition:a=>a.influenceSources.length>=5},{id:"reflection_10",name:"Thoughtful",description:"Completed 10 daily reflections",icon:"\uD83D\uDCAD",category:"reflection",rarity:"common",condition:a=>a.reflections.length>=10},{id:"insight_hunter",name:"Insight Hunter",description:"Flagged 5 insightful reflections",icon:"\uD83D\uDCA1",category:"reflection",rarity:"uncommon",condition:a=>a.reflections.filter(a=>a.insightFlagged).length>=5},{id:"balanced_mind",name:"Balanced Mind",description:"Achieved balanced scores across all constructs",icon:"⚖️",category:"achievement",rarity:"rare",condition:a=>!1},{id:"epistemic_autonomy",name:"Epistemic Autonomy",description:"Completed all modules and achieved high metacognitive awareness",icon:"\uD83C\uDF1F",category:"achievement",rarity:"epic",condition:a=>{let b=a.disconfirmGames.length>0&&a.schemaReclaims.length>0&&a.influenceSources.length>0,c=a.reflections.length>=20,d=a.streak.longest>=30;return b&&c&&d}},{id:"steelman_initiate",name:"Steelman Initiate",description:"Completed first Argument Flip with 60+ charity score",icon:"⚖️",category:"module",rarity:"common",condition:a=>a.argumentFlips.some(a=>a.charityScore>=60)},{id:"intellectual_honesty",name:"Intellectual Honesty",description:"Completed 5 Argument Flips with 70+ average charity",icon:"\uD83C\uDFAF",category:"achievement",rarity:"rare",condition:a=>{let b=a.argumentFlips;return!(b.length<5)&&b.reduce((a,b)=>a+b.charityScore,0)/b.length>=70}},{id:"source_detective",name:"Source Detective",description:"Completed 7 consecutive days of Source Audits",icon:"\uD83D\uDD0D",category:"module",rarity:"common",condition:a=>a.sourceAudits.length>=7},{id:"independent_thinker",name:"Independent Thinker",description:"Low source dependency + high evidence checking (II > 75)",icon:"\uD83E\uDD85",category:"achievement",rarity:"epic",condition:a=>{let b=a.sourceAudits;if(b.length<14)return!1;let c=(0,e.Xp)(b),d=100;return"high"===c.dependencyLevel?d-=30:"moderate"===c.dependencyLevel&&(d-=15),d-=.5*c.evidenceGaps,new Set(c.beneficiaryPatterns).size>=3&&(d+=5),Math.max(0,Math.min(100,Math.round(d)))>75}}];class g{static async checkAndUnlockBadges(a,b,c=[]){let[d,e,g,h,i,j,k,l,m]=await Promise.all([b.getStreak(),b.getDailyReflections(a),b.getDisconfirmGames(a),b.getSchemaReclaims(a),b.getInfluenceSources(a),b.getMilestones(a),b.getArgumentFlips(a),b.getSourceAudits(a),b.getBadges(a)]),n={streak:d,reflections:e,disconfirmGames:g,schemaReclaims:h,influenceSources:i,milestones:j,argumentFlips:k,sourceAudits:l},o=[],p=new Set(m.map(a=>a.badgeId));for(let d of f)if(!p.has(d.id)&&d.condition(n)){let e={id:crypto.randomUUID(),badgeId:d.id,userId:a,name:d.name,description:d.description,unlockedAt:new Date,icon:d.icon};await b.unlockBadge(e),o.push(e),c.push(d.id)}return o}static getBadgeById(a){return f.find(b=>b.id===a)}static getBadgesByCategory(a){return f.filter(b=>b.category===a)}static getBadgesByRarity(a){return f.filter(b=>b.rarity===a)}static getProgressForBadge(a,b){let c=this.getBadgeById(a);if(!c)return 0;switch(c.category){case"streak":switch(a){case"streak_7":return Math.min(b.streak.current/7,1);case"streak_21":return Math.min(b.streak.current/21,1);case"streak_60":return Math.min(b.streak.current/60,1);case"streak_100":return Math.min(b.streak.current/100,1)}break;case"reflection":switch(a){case"reflection_10":return Math.min(b.reflections.length/10,1);case"insight_hunter":return Math.min(b.reflections.filter(a=>a.insightFlagged).length/5,1)}break;case"module":switch(a){case"disconfirm_master":return Math.min(b.disconfirmGames.length/3,1);case"schema_reclaimer":return Math.min(b.schemaReclaims.length/2,1);case"source_auditor":return Math.min(b.influenceSources.length/5,1)}}return 0}}class h extends d.Ay{constructor(){super("ReflectorDB"),this.version(1).stores({responses:"++id, userId, assessmentId, itemId, timestamp",profiles:"++id, userId, lastUpdated",identityProfiles:"++id, userId, lastUpdated",streaks:"++id, userId",metadata:"key"}),this.version(2).stores({responses:"++id, userId, assessmentId, itemId, timestamp",profiles:"++id, userId, lastUpdated",identityProfiles:"++id, userId, lastUpdated",streaks:"++id, userId",metadata:"key",disconfirmGames:"++id, userId, timestamp, belief",schemaReclaims:"++id, userId, timestamp, schema",influenceSources:"++id, userId, name, type, category",dailyReflections:"++id, userId, date, category",badges:"++id, userId, badgeId, unlockedAt",milestones:"++id, userId, milestoneType, achievedAt"}),this.version(3).stores({responses:"++id, userId, assessmentId, itemId, timestamp",profiles:"++id, userId, lastUpdated",identityProfiles:"++id, userId, lastUpdated",streaks:"++id, userId",metadata:"key",disconfirmGames:"++id, userId, timestamp, belief",schemaReclaims:"++id, userId, timestamp, schema",influenceSources:"++id, userId, name, type, category",dailyReflections:"++id, userId, date, category",badges:"++id, userId, badgeId, unlockedAt",milestones:"++id, userId, milestoneType, achievedAt",argumentFlips:"++id, userId, timestamp, userBelief",sourceAudits:"++id, userId, date, belief"})}}let i=new h;class j{constructor(a="default_user"){this.userId=a}async saveResponse(a){await i.responses.add({...a,userId:this.userId,timestamp:new Date(a.timestamp)})}async getResponses(a){return(await i.responses.where("userId").equals(this.userId).and(b=>b.assessmentId===a).toArray()).map(a=>({...a,timestamp:new Date(a.timestamp)}))}async getAllResponses(){return(await i.responses.where("userId").equals(this.userId).toArray()).map(a=>({...a,timestamp:new Date(a.timestamp)}))}async saveProfile(a){await i.profiles.put({...a,userId:this.userId,lastUpdated:new Date})}async getProfile(){let a=await i.profiles.where("userId").equals(this.userId).first();return a?{...a,lastUpdated:new Date(a.lastUpdated)}:null}async saveIdentityProfile(a){await i.identityProfiles.put({...a,userId:this.userId,lastUpdated:new Date})}async getIdentityProfile(){let a=await i.identityProfiles.where("userId").equals(this.userId).first();return a?{...a,lastUpdated:new Date(a.lastUpdated)}:null}async updateStreak(){let a=new Date;a.setHours(0,0,0,0);let b=await i.streaks.where("userId").equals(this.userId).first();if(!b)return void await i.streaks.add({userId:this.userId,current:1,longest:1,lastActivity:a,milestones:{seven:!1,twentyOne:!1,sixty:!1,hundred:!1}});let c=new Date(b.lastActivity);c.setHours(0,0,0,0);let d=Math.floor((a.getTime()-c.getTime())/864e5);if(0!==d)if(1===d){let c=b.current+1,d=Math.max(c,b.longest),e={...b.milestones};c>=7&&!e.seven&&(e.seven=!0),c>=21&&!e.twentyOne&&(e.twentyOne=!0),c>=60&&!e.sixty&&(e.sixty=!0),c>=100&&!e.hundred&&(e.hundred=!0),await i.streaks.update(b.id,{current:c,longest:d,lastActivity:a,milestones:e})}else await i.streaks.update(b.id,{current:1,longest:b.longest,lastActivity:a,milestones:b.milestones})}async getStreak(){let a=await i.streaks.where("userId").equals(this.userId).first();return a?{...a,lastActivity:new Date(a.lastActivity)}:{userId:this.userId,current:0,longest:0,lastActivity:new Date,milestones:{seven:!1,twentyOne:!1,sixty:!1,hundred:!1}}}async checkBadges(){return await g.checkAndUnlockBadges(this.userId,this)}async checkModuleMilestones(){let a=this.userId,[b,c]=await Promise.all([i.responses.where("userId").equals(a).toArray(),i.identityProfiles.where("userId").equals(a).first()]),d=b.some(a=>"baseline-mirror"===a.assessmentId),[e,f,g]=await Promise.all([i.disconfirmGames.where("userId").equals(a).toArray(),i.schemaReclaims.where("userId").equals(a).toArray(),i.influenceSources.where("userId").equals(a).toArray()]),h=e.length>0&&f.length>0&&g.length>0;if(d&&c&&h){let b={id:crypto.randomUUID(),userId:a,milestoneType:"module_complete",achievedAt:new Date,metadata:{phase1Complete:!0,phase2Complete:!0,totalModules:5}};await i.milestones.add(b)}}async exportData(){let[a,b,c,d,e,f,g,h,j,k,l,m,n]=await Promise.all([this.getAllResponses(),i.profiles.where("userId").equals(this.userId).toArray(),i.identityProfiles.where("userId").equals(this.userId).toArray(),i.streaks.where("userId").equals(this.userId).toArray(),i.metadata.toArray(),this.getDisconfirmGames(this.userId),this.getSchemaReclaims(this.userId),this.getInfluenceSources(this.userId),this.getDailyReflections(this.userId),this.getBadges(this.userId),this.getMilestones(this.userId),this.getArgumentFlips(this.userId),this.getSourceAudits(this.userId)]),o={};return e.forEach(a=>{o[a.key]=a.value}),{responses:a,profiles:b.map(a=>({...a,lastUpdated:new Date(a.lastUpdated)})),identityProfiles:c.map(a=>({...a,lastUpdated:new Date(a.lastUpdated)})),streaks:d.map(a=>({...a,lastActivity:new Date(a.lastActivity)})),disconfirmGames:f,schemaReclaims:g,influenceSources:h,dailyReflections:j,badges:k,milestones:l,argumentFlips:m,sourceAudits:n,metadata:o,exportedAt:new Date,version:"3.0.0"}}async clearData(){await Promise.all([i.responses.where("userId").equals(this.userId).delete(),i.profiles.where("userId").equals(this.userId).delete(),i.identityProfiles.where("userId").equals(this.userId).delete(),i.streaks.where("userId").equals(this.userId).delete(),i.metadata.clear(),i.disconfirmGames.where("userId").equals(this.userId).delete(),i.schemaReclaims.where("userId").equals(this.userId).delete(),i.influenceSources.where("userId").equals(this.userId).delete(),i.dailyReflections.where("userId").equals(this.userId).delete(),i.badges.where("userId").equals(this.userId).delete(),i.milestones.where("userId").equals(this.userId).delete(),i.argumentFlips.where("userId").equals(this.userId).delete(),i.sourceAudits.where("userId").equals(this.userId).delete()])}async getMetadata(){let a=await i.metadata.toArray(),b={};return a.forEach(a=>{b[a.key]=a.value}),b}async setMetadata(a,b){await i.metadata.put({key:a,value:b})}async saveDisconfirmGame(a){await i.disconfirmGames.add({...a,userId:this.userId,timestamp:new Date(a.timestamp)})}async getDisconfirmGames(a){return(await i.disconfirmGames.where("userId").equals(a).toArray()).map(a=>({...a,timestamp:new Date(a.timestamp)}))}async saveSchemaReclaim(a){await i.schemaReclaims.add({...a,userId:this.userId,timestamp:new Date(a.timestamp)})}async getSchemaReclaims(a){return(await i.schemaReclaims.where("userId").equals(a).toArray()).map(a=>({...a,timestamp:new Date(a.timestamp)}))}async saveInfluenceSource(a){await i.influenceSources.add({...a,userId:this.userId})}async getInfluenceSources(a){return i.influenceSources.where("userId").equals(a).toArray()}async saveDailyReflection(a){await i.dailyReflections.add({...a,userId:this.userId,date:new Date(a.date)})}async getDailyReflections(a){return(await i.dailyReflections.where("userId").equals(a).toArray()).map(a=>({...a,date:new Date(a.date)}))}async unlockBadge(a){await i.badges.add({...a,userId:this.userId,unlockedAt:new Date(a.unlockedAt)})}async getBadges(a){return(await i.badges.where("userId").equals(a).toArray()).map(a=>({...a,unlockedAt:new Date(a.unlockedAt)}))}async saveMilestone(a){await i.milestones.add({...a,userId:this.userId,achievedAt:new Date(a.achievedAt)})}async getMilestones(a){return(await i.milestones.where("userId").equals(a).toArray()).map(a=>({...a,achievedAt:new Date(a.achievedAt)}))}async saveArgumentFlip(a){await i.argumentFlips.add({...a,userId:this.userId,timestamp:new Date(a.timestamp)})}async getArgumentFlips(a){return(await i.argumentFlips.where("userId").equals(a).toArray()).map(a=>({...a,timestamp:new Date(a.timestamp)}))}async saveSourceAudit(a){await i.sourceAudits.add({...a,userId:this.userId,date:new Date(a.date)})}async getSourceAudits(a){return(await i.sourceAudits.where("userId").equals(a).toArray()).map(a=>({...a,date:new Date(a.date)}))}}let k=new j},39004:(a,b,c)=>{function d(a){let{LocalAutonomyStore:b}=c(30886);return new b(a)}c.d(b,{W:()=>e,createAutonomyStore:()=>d});let e=d()},60323:(a,b,c)=>{c.d(b,{XW:()=>d});let d=[{id:"eai_01",construct:"EAI",type:"likert7",prompt:"Before sharing an opinion, I scan for whether it`s truly mine.",reverse:!1},{id:"eai_02",construct:"EAI",type:"likert7",prompt:"When my favorite commentator changes their view, I usually update mine too.",reverse:!0,schema_tag:"dependence"},{id:"eai_03",construct:"EAI",type:"likert7",prompt:"If my group stopped agreeing with a belief, I`d keep my view if the evidence still supports it.",reverse:!1},{id:"eai_04",construct:"EAI",type:"likert7",prompt:"I find it hard to hold an opinion that my community would disapprove of.",reverse:!0,schema_tag:"approval_seeking"},{id:"eai_05",construct:"EAI",type:"likert7",prompt:"I can tell when an idea is mine versus something I absorbed from others.",reverse:!1},{id:"eai_06",construct:"EAI",type:"likert7",prompt:"My beliefs mostly match those of people I admire.",reverse:!0,schema_tag:"dependence"},{id:"eai_07",construct:"EAI",type:"likert7",prompt:"When evaluating information, I prioritize whether it`s true over whether it supports my side.",reverse:!1},{id:"eai_08",construct:"EAI",type:"likert7",prompt:"If everyone around me believes something, I assume it`s probably correct.",reverse:!0},{id:"eai_09",construct:"EAI",type:"likert7",prompt:"I regularly check whether my positions come from my own reasoning or from tribal loyalty.",reverse:!1},{id:"eai_10",construct:"EAI",type:"likert7",prompt:"Disagreeing with authority figures makes me feel anxious or guilty.",reverse:!0,schema_tag:"punitive_parent"},{id:"eai_11",construct:"EAI",type:"vignette",prompt:"A highly respected leader in your community takes a position you initially disagreed with.",options:[{id:"a",text:`I reconsider—they probably see something I don\`t`,score:2,mechanism:"authority_deference"},{id:"b",text:"I investigate their reasoning while maintaining my initial doubt",score:7,mechanism:"autonomous_inquiry"},{id:"c",text:"I assume they`ve been captured by bad incentives",score:4,mechanism:"defensive_certainty"},{id:"d",text:"I check if this changes my respect for them before evaluating the claim",score:3,mechanism:"identity_first_reasoning"}]},{id:"eai_12",construct:"EAI",type:"vignette",prompt:"You realize a belief you hold is unpopular with both your in-group and people you respect.",options:[{id:"a",text:`I quietly drop it—the social cost isn\`t worth it`,score:1,mechanism:"social_pressure_capitulation"},{id:"b",text:"I keep it but stop mentioning it publicly",score:4,mechanism:"private_autonomy"},{id:"c",text:"I double-check my reasoning, then keep or revise based on evidence alone",score:7,mechanism:"evidence_primary"},{id:"d",text:`I get more vocal about it—consensus is often wrong`,score:5,mechanism:"contrarian_identity"}]},{id:"rf_01",construct:"RF",type:"likert7",prompt:"I can list specific evidence that would change my mind about my strongest beliefs.",reverse:!1},{id:"rf_02",construct:"RF",type:"likert7",prompt:"Once I`ve formed a strong opinion, new evidence rarely shifts it.",reverse:!0},{id:"rf_03",construct:"RF",type:"likert7",prompt:"I enjoy listing what could prove me wrong about a belief I hold.",reverse:!1},{id:"rf_04",construct:"RF",type:"likert7",prompt:"Changing my mind feels like weakness or failure.",reverse:!0,schema_tag:"unrelenting_standards"},{id:"rf_05",construct:"RF",type:"likert7",prompt:"I`ve meaningfully updated at least one major belief in the past year.",reverse:!1},{id:"rf_06",construct:"RF",type:"likert7",prompt:"When I encounter strong counter-evidence, I look for flaws in it before considering its merit.",reverse:!0},{id:"rf_07",construct:"RF",type:"vignette",prompt:"A trusted friend presents compelling evidence against one of your core positions.",options:[{id:"a",text:"I immediately point out weaknesses in their evidence",score:2,mechanism:"defensive_refutation"},{id:"b",text:"I acknowledge it`s interesting and say I`ll think about it",score:5,mechanism:"polite_deflection"},{id:"c",text:"I ask them to help me understand what I might be missing",score:7,mechanism:"genuine_inquiry"},{id:"d",text:"I feel hurt that they`d challenge something important to me",score:1,mechanism:"emotional_fusion"}]},{id:"rf_08",construct:"RF",type:"vignette",prompt:"You discover data that contradicts a position you`ve publicly defended.",options:[{id:"a",text:"I look for methodological flaws in the data",score:2,mechanism:"motivated_skepticism"},{id:"b",text:"I revise my view and publicly acknowledge the update",score:7,mechanism:"intellectual_honesty"},{id:"c",text:`I privately update but don\`t mention it—too embarrassing`,score:4,mechanism:"private_revision"},{id:"d",text:"I seek out data that re-confirms my original position",score:1,mechanism:"confirmation_seeking"}]},{id:"sa_01",construct:"SA",type:"likert7",prompt:"I can name the first three places I heard the claims I repeat most often.",reverse:!1},{id:"sa_02",construct:"SA",type:"likert7",prompt:`I rarely think about where my information comes from—I just know it.`,reverse:!0},{id:"sa_03",construct:"SA",type:"likert7",prompt:"Before sharing a claim, I trace it back to a primary source.",reverse:!1},{id:"sa_04",construct:"SA",type:"likert7",prompt:"Most of my news and information comes from 3 or fewer sources.",reverse:!0},{id:"sa_05",construct:"SA",type:"likert7",prompt:"I actively seek out sources that disagree with my current views.",reverse:!1},{id:"sa_06",construct:"SA",type:"likert7",prompt:"I trust information more when it confirms what I already believe.",reverse:!0},{id:"sa_07",construct:"SA",type:"vignette",prompt:"Someone asks you where you learned a fact you just stated.",options:[{id:"a",text:"I can immediately name the source and approximate date",score:7,mechanism:"high_source_tracking"},{id:"b",text:"I remember the general source (podcast, article, friend)",score:5,mechanism:"moderate_source_tracking"},{id:"c",text:`I\`m not sure—it\`s just something I know`,score:2,mechanism:"source_amnesia"},{id:"d",text:"I realize I may have absorbed it without verification",score:4,mechanism:"source_awareness_emerging"}]},{id:"sa_08",construct:"SA",type:"vignette",prompt:"You notice all your information on a topic comes from sources that share your perspective.",options:[{id:"a",text:`That makes sense—they\`re the ones who understand it correctly`,score:1,mechanism:"epistemic_closure"},{id:"b",text:"I seek out at least one high-quality dissenting source",score:7,mechanism:"deliberate_diversification"},{id:"c",text:"I note it but don`t change my reading habits",score:3,mechanism:"awareness_without_action"},{id:"d",text:'I look for a "neutral" source to balance it out',score:5,mechanism:"centrist_correction"}]},{id:"ard_01",construct:"ARD",type:"likert7",prompt:'When someone refutes "my side," I can stay curious for at least one minute.',reverse:!1},{id:"ard_02",construct:"ARD",type:"likert7",prompt:"Hearing someone praise a figure I dislike makes me feel angry or disgusted.",reverse:!0},{id:"ard_03",construct:"ARD",type:"likert7",prompt:"I notice my emotional reaction to information before deciding if it`s true.",reverse:!1},{id:"ard_04",construct:"ARD",type:"likert7",prompt:"When my values are challenged, I feel it physically (tension, heat, racing heart).",reverse:!0},{id:"ard_05",construct:"ARD",type:"likert7",prompt:"I can engage with ideas I find morally repugnant without losing my composure.",reverse:!1},{id:"ard_06",construct:"ARD",type:"likert7",prompt:'If someone from "the other side" makes a good point, I feel betrayed or confused.',reverse:!0,schema_tag:"identity_fusion"},{id:"ard_07",construct:"ARD",type:"vignette",prompt:"During a discussion, someone misrepresents a position you care deeply about.",options:[{id:"a",text:"I feel anger rise and immediately correct them with edge in my voice",score:2,mechanism:"reactive_defense"},{id:"b",text:"I notice my emotion, pause, then offer a clarification",score:7,mechanism:"regulated_response"},{id:"c",text:`I disengage—this person isn\`t worth engaging with`,score:3,mechanism:"defensive_withdrawal"},{id:"d",text:"I correct them but feel tense and upset for the next hour",score:4,mechanism:"lingering_dysregulation"}]},{id:"ard_08",construct:"ARD",type:"vignette",prompt:'You read a news headline that triggers strong negative emotion about "the other side."',options:[{id:"a",text:"I share it immediately with a commentary expressing my outrage",score:1,mechanism:"emotional_contagion"},{id:"b",text:"I notice the emotional pull and check the source before reacting",score:7,mechanism:"metacognitive_regulation"},{id:"c",text:"I read it, feel validated, and move on",score:3,mechanism:"confirmation_comfort"},{id:"d",text:"I check if the headline matches the article content",score:6,mechanism:"critical_verification"}]}]},77084:(a,b,c)=>{c.d(b,{Xp:()=>j,cT:()=>e,calculateEH:()=>h,calculateII:()=>i,exportScoresCSV:()=>g});var d=c(60323);function e(a,b="baseline_mirror_v1"){let c=function(a){let b={};for(let c of a){let a=d.XW.find(a=>a.id===c.itemId);a&&(b[a.construct]||(b[a.construct]=[]),b[a.construct].push(c))}return b}(a),g={};for(let a of["EAI","RF","SA","ARD"])g[a]=function(a,b){if(0===a.length)return{raw:0,ci_lower:0,ci_upper:0,ci_width:0,n_items:0};let c=a.map(a=>{let b=d.XW.find(b=>b.id===a.itemId);return b&&"likert7"===b.type&&b.reverse?8-a.value:a.value}),e=c.reduce((a,b)=>a+b,0)/c.length,{lower:g,upper:h}=function(a,b=1e3,c=.05){let d=a.length,e=[];for(let c=0;c<b;c++){let b=[];for(let c=0;c<d;c++){let c=Math.floor(Math.random()*d);b.push(a[c])}let c=b.reduce((a,b)=>a+b,0)/d;e.push(c)}e.sort((a,b)=>a-b);let f=Math.floor(c/2*b),g=Math.floor((1-c/2)*b);return{lower:e[f],upper:e[g]}}(c,1e3),i=Math.max(0,(g-1)/6*100),j=Math.min(100,(h-1)/6*100),k=c.length>=3?function(a,b){let c=a.length;if(c<2)return 0;let d=a.map(a=>f([a])),e=f(a);return Math.max(0,Math.min(1,c/(c-1)*(1-d.reduce((a,b)=>a+b,0)/e)))}(c,0):void 0;return{raw:Math.round((e-1)/6*100),ci_lower:Math.round(i),ci_upper:Math.round(j),ci_width:Math.round(j-i),n_items:a.length,alpha:k}}(c[a]||[],0);let h=.6*g.EAI.raw+.4*g.RF.raw,i=function(a){let b=a.map(a=>a.value),c=b.filter(a=>a<=2||a>=6).length/b.length,d=new Set(b).size<=2&&b.length>10,e=a.map(a=>a.timestamp.getTime());return{acquiescence_bias:Math.round(100*c)/100,straightlining:d,completion_time_flag:(Math.max(...e)-Math.min(...e))/a.length<2e3,attention_check_passed:!0}}(a),j=function(a){let b={};for(let[c,d]of Object.entries(a))d.raw>=70?b[c]="high":d.raw>=40?b[c]="moderate":b[c]="low";return b}(g),k=d.XW.length,l=a.length/k*100;return{assessmentId:b,userId:a[0]?.userId||"unknown",timestamp:new Date,version:"1.0.0",scores:g,composite_autonomy:Math.round(h),response_integrity:i,completion_percentage:Math.round(l),interpretation:j}}function f(a){if(0===a.length)return 0;let b=a.reduce((a,b)=>a+b,0)/a.length;return a.map(a=>Math.pow(a-b,2)).reduce((a,b)=>a+b,0)/a.length}function g(a){return["Construct,Score,CI_Lower,CI_Upper,Interpretation,Items,Alpha",...Object.entries(a.scores).map(([b,c])=>[b,c.raw,c.ci_lower,c.ci_upper,a.interpretation[b],c.n_items,c.alpha?.toFixed(3)||"N/A"].join(","))].join("\n")}function h(a){return 0===a.length?0:Math.round((a.reduce((a,b)=>a+b.charityScore,0)/a.length+a.reduce((a,b)=>a+b.accuracyScore,0)/a.length)/2)}function i(a){if(a.length<7)return 0;let b=j(a),c=100;return"high"===b.dependencyLevel?c-=30:"moderate"===b.dependencyLevel&&(c-=15),c-=.5*b.evidenceGaps,new Set(b.beneficiaryPatterns).size>=3&&(c+=5),Math.max(0,Math.min(100,Math.round(c)))}function j(a){if(0===a.length)return{dependencyLevel:"low",topSources:[],beneficiaryPatterns:[],evidenceGaps:0};let b={};a.forEach(a=>{let c=a.whoHeardFrom.toLowerCase().trim();c&&(b[c]=(b[c]||0)+1)});let c=Object.entries(b).sort((a,b)=>b[1]-a[1]).slice(0,3).map(([a])=>a),d={};a.forEach(a=>{a.whoBenefits.forEach(a=>{d[a]=(d[a]||0)+1})});let e=Object.entries(d).sort((a,b)=>b[1]-a[1]).slice(0,3).map(([a])=>a),f=Math.round(a.filter(a=>a.evidenceChecked.toLowerCase().includes("not checked")||a.evidenceChecked.toLowerCase().includes("haven't")||a.evidenceChecked.toLowerCase().includes("not sure")||a.evidenceChecked.length<20).length/a.length*100);Object.keys(b).length;let g=Object.values(b).slice(0,3).reduce((a,b)=>a+b,0)/a.length;return{dependencyLevel:g>.6?"high":g>.4?"moderate":"low",topSources:c,beneficiaryPatterns:e,evidenceGaps:f}}}};